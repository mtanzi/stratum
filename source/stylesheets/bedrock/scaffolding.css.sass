@import "bedrock/grid"

// Rows
.row
  +grid-row
  // Inner row
  .row
    +grid-row(inner)

// Draw guides if $grid-guides is set
@if $grid-guides
  .row
    @extend .show-grid
    .row:before
      display: none

.column-borders
  +grid-column-borders

// Columns
.column, .columns
  +grid-column
  // Centred column
  &.centered, .row &.centered, .row .row &.centered,
  &[class*="column"] + [class*="column"].centered
    +grid-column(centered)

// Columns in the inner row
.row .row .column, .row .row .columns,
.row .row [class*="column"] + [class*="column"]:last-child,
  +grid-column(inner)

// Last column
[class*="column"] + [class*="column"]:last-child,
[class*="column"] + [class*="column"].last
  +grid-column(last)

// Ending column (following others)
[class*="column"] + [class*="column"].end
  +grid-column(end)

// Column sizes
@for $i from 1 through $grid-total-columns
  .#{number-to-word($i)}
    +grid-column-width($i)

// Offsets:
// - Left
@for $i from 1 through $grid-total-columns
  .#{number-to-word($i)}-from-left
    +grid-offset-by-column($i, left)
// - Right (attribute selector to override other modifiers, such as .last)
@for $i from 1 through $grid-total-columns
  .#{number-to-word($i)}-from-right[class],
  .#{number-to-word($i)}-from-right:last-child[class],
  .#{number-to-word($i)}-from-right.last[class]
    +grid-offset-by-column($i, right)

.flush-right
  float: right
.flush-left
  float: left


// Grid debugging
.show-grid
  +grid-show-guides
  &.front:before
    z-index: auto
